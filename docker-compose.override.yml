# Please consult our docs for more info: https://www.librechat.ai/docs/configuration/docker_override

# TO USE THIS FILE, FIRST UNCOMMENT THE LINE ('services:')

# THEN UNCOMMENT ONLY THE SECTION OR SECTIONS CONTAINING THE CHANGES YOU WANT TO APPLY
# SAVE THIS FILE AS 'docker-compose.override.yaml'
# AND USE THE 'docker compose build' & 'docker compose up -d' COMMANDS AS YOU WOULD NORMALLY DO

# WARNING: YOU CAN ONLY SPECIFY EVERY SERVICE NAME ONCE (api, mongodb, meilisearch, ...)
# IF YOU WANT TO OVERRIDE MULTIPLE SETTINGS IN ONE SERVICE YOU WILL HAVE TO EDIT ACCORDINGLY

# EXAMPLE: if you want to use the config file and the latest numbered release docker image the result will be:

# services:
#   api:
#     volumes:
#     - type: bind
#       source: ./librechat.yaml
#       target: /app/librechat.yaml
#     image: ghcr.io/danny-avila/librechat:latest

# ---------------------------------------------------

services:

# # USE LIBRECHAT CONFIG FILE
  api:
    image: librechat
    build:
      context: .
      target: node
    env_file:
    - .env
    volumes:
    - ./librechat.yaml:/app/librechat.yaml
    - ./images:/app/client/public/images
    - ./logs:/app/api/logs
    - ./src:/app/src  # Only mount the source code, NOT the entire `/app`
    - ./app/clients:/app/clients #get app clients code in for development
    - /app/node_modules  # Keep dependencies inside the container



  
  vectordb:
    image: ankane/pgvector:latest
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - pgdata2:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  rag_api:
    image: librechat-rag-api:local
    build:
      context: ../rag_api
      dockerfile: Dockerfile

    environment:
      - RAG_API_URL=http://rag_api:${RAG_PORT:-8000}
      - RAG_UPLOAD_DIR=/app/uploads
    volumes:
      - ../rag_api/uploads:/app/uploads
      - ../rag_api:/app
    ports:
      - "8000:8000"